{
  "address": "0xa1b05B70107E87CeA3ef8fd2d7a4282a93F1682F",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IDecentralizedEURO",
          "name": "deuro_",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "initialRatePPM",
          "type": "uint24"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ChangeNotReady",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ModuleDisabled",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoPendingChange",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "interest",
          "type": "uint256"
        }
      ],
      "name": "InterestCollected",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint24",
          "name": "newRate",
          "type": "uint24"
        }
      ],
      "name": "RateChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint24",
          "name": "nextRate",
          "type": "uint24"
        },
        {
          "indexed": false,
          "internalType": "uint40",
          "name": "nextChange",
          "type": "uint40"
        }
      ],
      "name": "RateProposed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint192",
          "name": "amount",
          "type": "uint192"
        }
      ],
      "name": "Saved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint192",
          "name": "amount",
          "type": "uint192"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "accountOwner",
          "type": "address"
        }
      ],
      "name": "accruedInterest",
      "outputs": [
        {
          "internalType": "uint192",
          "name": "",
          "type": "uint192"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "accountOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "accruedInterest",
      "outputs": [
        {
          "internalType": "uint192",
          "name": "",
          "type": "uint192"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint192",
          "name": "targetAmount",
          "type": "uint192"
        }
      ],
      "name": "adjust",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "applyChange",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint192",
              "name": "saved",
              "type": "uint192"
            },
            {
              "internalType": "uint64",
              "name": "ticks",
              "type": "uint64"
            }
          ],
          "internalType": "struct Savings.Account",
          "name": "account",
          "type": "tuple"
        },
        {
          "internalType": "uint64",
          "name": "ticks",
          "type": "uint64"
        }
      ],
      "name": "calculateInterest",
      "outputs": [
        {
          "internalType": "uint192",
          "name": "",
          "type": "uint192"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentRatePPM",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentTicks",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deuro",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "equity",
      "outputs": [
        {
          "internalType": "contract IReserve",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextChange",
      "outputs": [
        {
          "internalType": "uint40",
          "name": "",
          "type": "uint40"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextRatePPM",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint24",
          "name": "newRatePPM_",
          "type": "uint24"
        },
        {
          "internalType": "address[]",
          "name": "helpers",
          "type": "address[]"
        }
      ],
      "name": "proposeChange",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "refreshBalance",
      "outputs": [
        {
          "internalType": "uint192",
          "name": "",
          "type": "uint192"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "refreshMyBalance",
      "outputs": [
        {
          "internalType": "uint192",
          "name": "",
          "type": "uint192"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint192",
          "name": "amount",
          "type": "uint192"
        }
      ],
      "name": "save",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint192",
          "name": "amount",
          "type": "uint192"
        }
      ],
      "name": "save",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "savings",
      "outputs": [
        {
          "internalType": "uint192",
          "name": "saved",
          "type": "uint192"
        },
        {
          "internalType": "uint64",
          "name": "ticks",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "ticks",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint192",
          "name": "amount",
          "type": "uint192"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb09737c88c2f3363e7a49dd041b580c1c0deab46dec8d358c20432094f4272f1",
  "receipt": {
    "to": null,
    "from": "0x7246a902fD8Bf96eCe1Dc9DCc3Bfa9299aF4937e",
    "contractAddress": "0xa1b05B70107E87CeA3ef8fd2d7a4282a93F1682F",
    "transactionIndex": 8,
    "gasUsed": "1079887",
    "logsBloom": "0x
    "blockHash": "0xacae5e1280fa880e5a828d0c8e5caa54a01e364be8048168ce16d19d2ebb3200",
    "transactionHash": "0xb09737c88c2f3363e7a49dd041b580c1c0deab46dec8d358c20432094f4272f1",
    "logs": [
      {
        "transactionIndex": 8,
        "blockNumber": 21568968,
        "transactionHash": "0xb09737c88c2f3363e7a49dd041b580c1c0deab46dec8d358c20432094f4272f1",
        "address": "0xa1b05B70107E87CeA3ef8fd2d7a4282a93F1682F",
        "topics": [
          "0xd76dfbd4c35cffe2a846b6488bc677c511aa4337e1551f3a360427ac7a78de7b"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000005",
        "logIndex": 28,
        "blockHash": "0xacae5e1280fa880e5a828d0c8e5caa54a01e364be8048168ce16d19d2ebb3200"
      }
    ],
    "blockNumber": 21568968,
    "cumulativeGasUsed": "2618307",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xd02812Be610952aAFBbbfBcA438887A2f3A5f53B",
    5
  ],
  "numDeployments": 4,
  "solcInputHash": "ece481ab51611799f01de526970750f0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IDecentralizedEURO\",\"name\":\"deuro_\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"initialRatePPM\",\"type\":\"uint24\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ChangeNotReady\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ModuleDisabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoPendingChange\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"interest\",\"type\":\"uint256\"}],\"name\":\"InterestCollected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"newRate\",\"type\":\"uint24\"}],\"name\":\"RateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"nextRate\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"uint40\",\"name\":\"nextChange\",\"type\":\"uint40\"}],\"name\":\"RateProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint192\",\"name\":\"amount\",\"type\":\"uint192\"}],\"name\":\"Saved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint192\",\"name\":\"amount\",\"type\":\"uint192\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"accountOwner\",\"type\":\"address\"}],\"name\":\"accruedInterest\",\"outputs\":[{\"internalType\":\"uint192\",\"name\":\"\",\"type\":\"uint192\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"accountOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"accruedInterest\",\"outputs\":[{\"internalType\":\"uint192\",\"name\":\"\",\"type\":\"uint192\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"targetAmount\",\"type\":\"uint192\"}],\"name\":\"adjust\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"applyChange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint192\",\"name\":\"saved\",\"type\":\"uint192\"},{\"internalType\":\"uint64\",\"name\":\"ticks\",\"type\":\"uint64\"}],\"internalType\":\"struct Savings.Account\",\"name\":\"account\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"ticks\",\"type\":\"uint64\"}],\"name\":\"calculateInterest\",\"outputs\":[{\"internalType\":\"uint192\",\"name\":\"\",\"type\":\"uint192\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentRatePPM\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentTicks\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deuro\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"equity\",\"outputs\":[{\"internalType\":\"contract IReserve\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextChange\",\"outputs\":[{\"internalType\":\"uint40\",\"name\":\"\",\"type\":\"uint40\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextRatePPM\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"newRatePPM_\",\"type\":\"uint24\"},{\"internalType\":\"address[]\",\"name\":\"helpers\",\"type\":\"address[]\"}],\"name\":\"proposeChange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"refreshBalance\",\"outputs\":[{\"internalType\":\"uint192\",\"name\":\"\",\"type\":\"uint192\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refreshMyBalance\",\"outputs\":[{\"internalType\":\"uint192\",\"name\":\"\",\"type\":\"uint192\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"amount\",\"type\":\"uint192\"}],\"name\":\"save\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"amount\",\"type\":\"uint192\"}],\"name\":\"save\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"savings\",\"outputs\":[{\"internalType\":\"uint192\",\"name\":\"saved\",\"type\":\"uint192\"},{\"internalType\":\"uint64\",\"name\":\"ticks\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"amount\",\"type\":\"uint192\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Savings Module to enable savings based on a Leadrate (\\\"Leitzins\\\") module. As the interest rate changes, the speed at which 'ticks' are accumulated is adjusted. The ticks counter serves as the basis for calculating the interest due for the individual accounts.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"applyChange()\":{\"notice\":\"Setting a previously proposed interest rate change into force.\"},\"currentTicks()\":{\"notice\":\"Total accumulated 'interest ticks' since this contract was deployed. One 'tick' is a ppm-second, so one month of 12% annual interest is   120000*30*24*3600 = 311040000000 ticks. Two months of 6% annual interest would result in the same number of ticks. For simplicity, this is linear, so there is no \\\"interest on interest\\\".\"},\"proposeChange(uint24,address[])\":{\"notice\":\"Proposes a new interest rate that will automatically be applied after seven days. To cancel a proposal, just overwrite it with a new one proposing the current rate.\"},\"refreshBalance(address)\":{\"notice\":\"Collects the accrued interest and adds it to the account. It can be beneficial to do so every now and then in order to start collecting interest on the accrued interest.\"},\"refreshMyBalance()\":{\"notice\":\"Shortcut for refreshBalance(msg.sender)\"},\"save(address,uint192)\":{\"notice\":\"Send 'amount' to the account of the provided owner.\"},\"save(uint192)\":{\"notice\":\"Save 'amount'.\"},\"withdraw(address,uint192)\":{\"notice\":\"Withdraw up to 'amount' to the target address. When trying to withdraw more than available, all that is available is withdrawn. Returns the actually transferred amount.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Savings.sol\":\"Savings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"contracts/Leadrate.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IReserve} from \\\"./interface/IReserve.sol\\\";\\n\\n/**\\n * @title Leadrate (attempt at translating the concise German term 'Leitzins')\\n *\\n * A module that can provide other modules with the leading interest rate for the system.\\n *\\n **/\\ncontract Leadrate {\\n    IReserve public immutable equity;\\n\\n    // The following five variables are less than 256 bits, so they should be stored\\n    // in the same slot, making them cheaper to access together, right?\\n\\n    uint24 public currentRatePPM; // 24 bits allows rates of up to ~1670% per year\\n    uint24 public nextRatePPM;\\n    uint40 public nextChange;\\n\\n    uint40 private anchorTime; // 40 bits for time in seconds spans up to 1000 human generations\\n    uint64 private ticksAnchor; // in bips * seconds\\n\\n    event RateProposed(address who, uint24 nextRate, uint40 nextChange);\\n    event RateChanged(uint24 newRate);\\n\\n    error NoPendingChange();\\n    error ChangeNotReady();\\n\\n    constructor(IReserve equity_, uint24 initialRatePPM) {\\n        equity = equity_;\\n        nextRatePPM = initialRatePPM;\\n        currentRatePPM = initialRatePPM;\\n        nextChange = uint40(block.timestamp);\\n        anchorTime = nextChange;\\n        ticksAnchor = 0;\\n        emit RateChanged(initialRatePPM); // emit for initialization indexing, if desired\\n    }\\n\\n    /**\\n     * Proposes a new interest rate that will automatically be applied after seven days.\\n     * To cancel a proposal, just overwrite it with a new one proposing the current rate.\\n     */\\n    function proposeChange(uint24 newRatePPM_, address[] calldata helpers) external {\\n        equity.checkQualified(msg.sender, helpers);\\n        nextRatePPM = newRatePPM_;\\n        nextChange = uint40(block.timestamp + 7 days);\\n        emit RateProposed(msg.sender, nextRatePPM, nextChange);\\n    }\\n\\n    /**\\n     * Setting a previously proposed interest rate change into force.\\n     */\\n    function applyChange() external {\\n        if (currentRatePPM == nextRatePPM) revert NoPendingChange();\\n        uint40 timeNow = uint40(block.timestamp);\\n        if (timeNow < nextChange) revert ChangeNotReady();\\n        ticksAnchor += (timeNow - anchorTime) * currentRatePPM;\\n        anchorTime = timeNow;\\n        currentRatePPM = nextRatePPM;\\n        emit RateChanged(currentRatePPM);\\n    }\\n\\n    /**\\n     * Total accumulated 'interest ticks' since this contract was deployed.\\n     * One 'tick' is a ppm-second, so one month of 12% annual interest is\\n     *   120000*30*24*3600 = 311040000000 ticks.\\n     * Two months of 6% annual interest would result in the same number of\\n     * ticks. For simplicity, this is linear, so there is no \\\"interest on interest\\\".\\n     */\\n    function currentTicks() public view returns (uint64) {\\n        return ticks(block.timestamp);\\n    }\\n\\n    function ticks(uint256 timestamp) public view returns (uint64) {\\n        return ticksAnchor + (uint64(timestamp) - anchorTime) * currentRatePPM;\\n    }\\n}\\n\",\"keccak256\":\"0xfa5b1950f9eaaceed6972b36e0ba8967c69d0fdee14a9e6d02dcdd1a1e34e795\",\"license\":\"MIT\"},\"contracts/Savings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport {IDecentralizedEURO} from \\\"./interface/IDecentralizedEURO.sol\\\";\\nimport {IReserve} from \\\"./interface/IReserve.sol\\\";\\nimport {Leadrate} from \\\"./Leadrate.sol\\\";\\n\\n/**\\n * @title Savings\\n *\\n * Module to enable savings based on a Leadrate (\\\"Leitzins\\\") module.\\n *\\n * As the interest rate changes, the speed at which 'ticks' are accumulated is\\n * adjusted. The ticks counter serves as the basis for calculating the interest\\n * due for the individual accounts.\\n */\\ncontract Savings is Leadrate {\\n    IERC20 public immutable deuro;\\n\\n    mapping(address => Account) public savings;\\n\\n    struct Account {\\n        uint192 saved;\\n        uint64 ticks;\\n    }\\n\\n    event Saved(address indexed account, uint192 amount);\\n    event InterestCollected(address indexed account, uint256 interest);\\n    event Withdrawn(address indexed account, uint192 amount);\\n\\n    // The module is considered disabled if the interest is zero or about to become zero within three days.\\n    error ModuleDisabled();\\n\\n    constructor(IDecentralizedEURO deuro_, uint24 initialRatePPM) Leadrate(IReserve(deuro_.reserve()), initialRatePPM) {\\n        deuro = IERC20(deuro_);\\n    }\\n\\n    /**\\n     * Shortcut for refreshBalance(msg.sender)\\n     */\\n    function refreshMyBalance() public returns (uint192) {\\n        return refreshBalance(msg.sender);\\n    }\\n\\n    /**\\n     * Collects the accrued interest and adds it to the account.\\n     *\\n     * It can be beneficial to do so every now and then in order to start collecting\\n     * interest on the accrued interest.\\n     */\\n    function refreshBalance(address owner) public returns (uint192) {\\n        return refresh(owner).saved;\\n    }\\n\\n    function refresh(address accountOwner) virtual internal returns (Account storage) {\\n        Account storage account = savings[accountOwner];\\n        uint64 ticks = currentTicks();\\n        if (ticks > account.ticks) {\\n            uint192 earnedInterest = calculateInterest(account, ticks);\\n            if (earnedInterest > 0) {\\n                // collect interest as you go and trigger accounting event\\n                (IDecentralizedEURO(address(deuro))).coverLoss(address(this), earnedInterest);\\n                account.saved += earnedInterest;\\n                emit InterestCollected(accountOwner, earnedInterest);\\n            }\\n            account.ticks = ticks;\\n        }\\n        return account;\\n    }\\n\\n    function accruedInterest(address accountOwner) public view returns (uint192) {\\n        return accruedInterest(accountOwner, block.timestamp);\\n    }\\n\\n    function accruedInterest(address accountOwner, uint256 timestamp) public view returns (uint192) {\\n        Account memory account = savings[accountOwner];\\n        return calculateInterest(account, ticks(timestamp));\\n    }\\n\\n    function calculateInterest(Account memory account, uint64 ticks) public view returns (uint192) {\\n        if (ticks <= account.ticks || account.ticks == 0) {\\n            return 0;\\n        } else {\\n            uint192 earnedInterest = uint192((uint256(ticks - account.ticks) * account.saved) / 1000000 / 365 days);\\n            uint256 equity = IDecentralizedEURO(address(deuro)).equity();\\n            if (earnedInterest > equity) {\\n                return uint192(equity); // safe conversion as equity is smaller than uint192 earnedInterest\\n            } else {\\n                return earnedInterest;\\n            }\\n        }\\n    }\\n\\n    /**\\n     * Save 'amount'.\\n     */\\n    function save(uint192 amount) public {\\n        save(msg.sender, amount);\\n    }\\n\\n    function adjust(uint192 targetAmount) public {\\n        Account storage balance = refresh(msg.sender);\\n        if (balance.saved < targetAmount) {\\n            save(targetAmount - balance.saved);\\n        } else if (balance.saved > targetAmount) {\\n            withdraw(msg.sender, balance.saved - targetAmount);\\n        }\\n    }\\n\\n    /**\\n     * Send 'amount' to the account of the provided owner.\\n     */\\n    function save(address owner, uint192 amount) public {\\n        if (currentRatePPM == 0) revert ModuleDisabled();\\n        if (nextRatePPM == 0 && (nextChange <= block.timestamp)) revert ModuleDisabled();\\n        Account storage balance = refresh(owner);\\n        deuro.transferFrom(msg.sender, address(this), amount);\\n        assert(balance.ticks >= currentTicks()); // @dev: should not differ, since there is no shift of interests\\n        balance.saved += amount;\\n        emit Saved(owner, amount);\\n    }\\n\\n    /**\\n     * Withdraw up to 'amount' to the target address.\\n     * When trying to withdraw more than available, all that is available is withdrawn.\\n     * Returns the actually transferred amount.\\n     */\\n    function withdraw(address target, uint192 amount) public returns (uint256) {\\n        Account storage account = refresh(msg.sender);\\n        if (amount >= account.saved) {\\n            amount = account.saved;\\n            delete savings[msg.sender];\\n        } else {\\n            account.saved -= amount;\\n        }\\n        deuro.transfer(target, amount);\\n        emit Withdrawn(msg.sender, amount);\\n        return amount;\\n    }\\n}\\n\",\"keccak256\":\"0xd447bb7409a35e6427fb29434fbb193e915e99583604fd4616f2a4a27b1db216\",\"license\":\"MIT\"},\"contracts/interface/IDecentralizedEURO.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IReserve} from \\\"./IReserve.sol\\\";\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IDecentralizedEURO is IERC20 {\\n    function suggestMinter(\\n        address _minter,\\n        uint256 _applicationPeriod,\\n        uint256 _applicationFee,\\n        string calldata _message\\n    ) external;\\n\\n    function registerPosition(address position) external;\\n\\n    function denyMinter(address minter, address[] calldata helpers, string calldata message) external;\\n\\n    function reserve() external view returns (IReserve);\\n\\n    function minterReserve() external view returns (uint256);\\n\\n    function calculateAssignedReserve(uint256 mintedAmount, uint32 _reservePPM) external view returns (uint256);\\n\\n    function calculateFreedAmount(uint256 amountExcludingReserve, uint32 reservePPM) external view returns (uint256);\\n\\n    function equity() external view returns (uint256);\\n\\n    function isMinter(address minter) external view returns (bool);\\n\\n    function getPositionParent(address position) external view returns (address);\\n\\n    function mint(address target, uint256 amount) external;\\n\\n    function mintWithReserve(address target, uint256 amount, uint32 reservePPM, uint32 feePPM) external;\\n\\n    function burnFrom(address target, uint256 amount) external;\\n\\n    function burnWithoutReserve(uint256 amountIncludingReserve, uint32 reservePPM) external;\\n\\n    function burnFromWithReserve(\\n        address payer,\\n        uint256 targetTotalBurnAmount,\\n        uint32 _reservePPM\\n    ) external returns (uint256);\\n\\n    function burnWithReserve(uint256 amountExcludingReserve, uint32 reservePPM) external returns (uint256);\\n\\n    function coverLoss(address source, uint256 amount) external;\\n\\n    function collectProfits(address source, uint256 _amount) external;\\n}\\n\",\"keccak256\":\"0x5a794e79a91424814795d9f3edd3db86e4d360f652a0250c04c279592417bb8e\",\"license\":\"MIT\"},\"contracts/interface/IReserve.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IReserve is IERC20 {\\n    function invest(uint256 amount, uint256 expected) external returns (uint256);\\n    function checkQualified(address sender, address[] calldata helpers) external view;\\n}\\n\",\"keccak256\":\"0x8d413b94c7860d6f8a9ba0168642db626830209824e4ad2d879d5f252490d2b9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "title": "Savings Module to enable savings based on a Leadrate (\"Leitzins\") module. As the interest rate changes, the speed at which 'ticks' are accumulated is adjusted. The ticks counter serves as the basis for calculating the interest due for the individual accounts.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "applyChange()": {
        "notice": "Setting a previously proposed interest rate change into force."
      },
      "currentTicks()": {
        "notice": "Total accumulated 'interest ticks' since this contract was deployed. One 'tick' is a ppm-second, so one month of 12% annual interest is   120000*30*24*3600 = 311040000000 ticks. Two months of 6% annual interest would result in the same number of ticks. For simplicity, this is linear, so there is no \"interest on interest\"."
      },
      "proposeChange(uint24,address[])": {
        "notice": "Proposes a new interest rate that will automatically be applied after seven days. To cancel a proposal, just overwrite it with a new one proposing the current rate."
      },
      "refreshBalance(address)": {
        "notice": "Collects the accrued interest and adds it to the account. It can be beneficial to do so every now and then in order to start collecting interest on the accrued interest."
      },
      "refreshMyBalance()": {
        "notice": "Shortcut for refreshBalance(msg.sender)"
      },
      "save(address,uint192)": {
        "notice": "Send 'amount' to the account of the provided owner."
      },
      "save(uint192)": {
        "notice": "Save 'amount'."
      },
      "withdraw(address,uint192)": {
        "notice": "Withdraw up to 'amount' to the target address. When trying to withdraw more than available, all that is available is withdrawn. Returns the actually transferred amount."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 9371,
        "contract": "contracts/Savings.sol:Savings",
        "label": "currentRatePPM",
        "offset": 0,
        "slot": "0",
        "type": "t_uint24"
      },
      {
        "astId": 9373,
        "contract": "contracts/Savings.sol:Savings",
        "label": "nextRatePPM",
        "offset": 3,
        "slot": "0",
        "type": "t_uint24"
      },
      {
        "astId": 9375,
        "contract": "contracts/Savings.sol:Savings",
        "label": "nextChange",
        "offset": 6,
        "slot": "0",
        "type": "t_uint40"
      },
      {
        "astId": 9377,
        "contract": "contracts/Savings.sol:Savings",
        "label": "anchorTime",
        "offset": 11,
        "slot": "0",
        "type": "t_uint40"
      },
      {
        "astId": 9379,
        "contract": "contracts/Savings.sol:Savings",
        "label": "ticksAnchor",
        "offset": 16,
        "slot": "0",
        "type": "t_uint64"
      },
      {
        "astId": 13607,
        "contract": "contracts/Savings.sol:Savings",
        "label": "savings",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(Account)13612_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(Account)13612_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Savings.Account)",
        "numberOfBytes": "32",
        "value": "t_struct(Account)13612_storage"
      },
      "t_struct(Account)13612_storage": {
        "encoding": "inplace",
        "label": "struct Savings.Account",
        "members": [
          {
            "astId": 13609,
            "contract": "contracts/Savings.sol:Savings",
            "label": "saved",
            "offset": 0,
            "slot": "0",
            "type": "t_uint192"
          },
          {
            "astId": 13611,
            "contract": "contracts/Savings.sol:Savings",
            "label": "ticks",
            "offset": 24,
            "slot": "0",
            "type": "t_uint64"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint192": {
        "encoding": "inplace",
        "label": "uint192",
        "numberOfBytes": "24"
      },
      "t_uint24": {
        "encoding": "inplace",
        "label": "uint24",
        "numberOfBytes": "3"
      },
      "t_uint40": {
        "encoding": "inplace",
        "label": "uint40",
        "numberOfBytes": "5"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}